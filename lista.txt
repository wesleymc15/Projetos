1) O que é tipagem dinâmica de variáveis, adotada pelas linguagens JavaScript e PHP? Escreva um
breve código que demonstre essa característica na linguagem PHP.
R: Tipo não declarado; a variável pode acomodar objetos de tipos diferentes durante sua vida.
Código:
<?php
$a = 1;
$b = 2;
$b = "x";
echo($a + $b); // mostra "1"
echo($a . $b); // mostra "1a";
?>

2)Quais são as diferenças entre as linguagens PHP e JavaScript? Em que ocasiões cada uma delas
deve ser utilizada?
R: PHP é executada do lado do servidor, ou seja, um browser internet, na máquina do usuário, faz um pedido de página
e outro computador se encarrega de fazer todo o processamento necessário enviando apenas o resultado em seguida.
JavaScript por sua vez é executada do lado do cliente, sendo o código enviado junto com a página Internet e o processamento
feito pelo browser.
A linguagem PHP permite acesso a bancos de dados de forma muito mais simples, pois pode trabalhar diretamente com as conexões
abertas entre o servidor de páginas e o servidor de bancos de dados. Como JavaScript é executada do lado do cliente,
fica muito mais complicado criar uma conexão por meio da rede para acesso a dados e criação de páginas dinâmicas.
Um dos grandes diferenciais para se usar JavaScript é tirar a sobrecarga de processamento do servidor, fazendo com que um
pouco dessa carga fique por conta do cliente. Por exemplo, para validar o preenchimento de determinados campos num
formulário HTML, a verificação pode ser feita no cliente antes de enviar os dados pela rede, ganhando no tempo de transferência
 dos dados.

3)O que são as variáveis superglobais do PHP? Dê um exemplo de uma variável superglobal, e
descreva a sua finalidade.
R: São variáveis que podem ser acessadas em
qualquer escopo, e são elas $GLOBALS, $_SERVER, $_GET, $_POST,
$_COOKIE, $_FILES, $_ENV, $_REQUEST e $_SESSION. Acontece que não é
possível definir uma outra variável como superglobal, e aí a confusão começa.

4)Considere um formulário HTML inicializado a partir do código <form action=”processa.php”
method=get> e outro formulário inicializado a partir do código <form action=”processa.php”
method=post>. Perceba que os dois formulários possuem abordagens diferentes para envio de
dados para o servidor. Qual é a diferença entre essas duas abordagens?

5)Descreva o funcionamento da arquitetura de três camadas, adotada em aplicações Web que
envolvem acesso a bases de dados.
R: Arquitetura 3 camadas é um padrão de arquitetura que descreve como três camadas de desenvolvimento relacionam entre si.
Essa arquitetura fornece uma maneira de dividir as funcionalidades envolvidas na manutenção e apresentação de uma aplicação.
Foi desenvolvida com objetivo de mapear as tarefas de entrada, processamento e saída para o modelo de interação com o usuário,
assim sendo mais fácil mapear os conceitos no domínio de aplicações.
As camadas são:

   Camada de Apresentação: tem como função exibir as informações. Usada para receber as entradas e apresentar o resultado,
   ou seja, é a interface com o usuário.

   Camada de Regra de Negócio: responsável por controlar todo o fluxo de informação. Intermediária entre a camada de
   apresentação e acesso a dados. Nesta camada é executada a regra de negócio (inteligência do sistema).

   Camada de Acesso a Dados: é responsável pela persistência e acesso aos dados da aplicação.

6)Por que dizemos que o HTTP é um protocolo que não mantém estado, isto é não mantem uma
conexão? De que forma as sessões e os cookies são usados para lidar com essa limitação do HTTP?
R: O protocolo HTTP é stateless, ou seja, ele não mantém um estado/conexão. Toda a interação que o seu cliente fizer com
um servidor Web acarretará em uma nova requisição e resposta.
As requisições são independentes e possuem um tempo de vida (conexão, envio de mensagem, resposta, encerramento da conexão).
O servidor Web não é capaz de identificar se duas requisições vieram de um mesmo navegador, e o mesmo não faz nenhum
gerenciamento em memória para que mensagens sejam compartilhadas entre requisições.
É para suprir esta necessidade que entram os cookies e sessões.

7)Quais são as diferenças entre Cookies e Sessões?
R: Através de cookies o servidor Web é capaz de trocar informações de estado com o navegador do usuário.
Desse modo, somos capazes de adicionar produtos a um carrinho de compras, sem perder estas informações ao mudar
de página, sair do website ou até mesmo fechar o navegador. um cookie é uma pequena quantidade de informação persistida
temporariamente pelo navegador.
As sessões têm um princípio similar aos cookies, só que o armazenamento do estado é feito pelo servidor Web, e não pelo navegador.
Por exemplo, quando construímos uma aplicação que necessita de autenticação, no momento em que o usuário efetuar o login,
podemos até permitir que algumas informações sejam armazenadas em um cookie, mas dados mais “sensíveis”, como usuário e e-mail,
 são mais interessantes de serem guardadas em sessões. Isto, pois não é seguro que esse tipo de informação fique “viajando”
 pela Web.
Quando iniciamos uma sessão, é enviado um cookie para o navegador, com um valor único que corresponde a sessão aberta no
servidor Web.

10) O que são Namespaces e para que são usadas?


13) Explique em poucas palavras o funcionamento do padrão de funcionamento front controller,
também adotado pelo Yii2 e demais frameworks para a Web. Dentro desse contexto, explique como
as rotas do Yii 2 são usadas para determinar as páginas que a aplicação deve carregar mediante as
requisições dos usuários.

R: O padrão de design do software do front-controller está listado em vários catálogos de padrões e relacionado ao design
de aplicativos da Web. É "um controlador que lida com todas as solicitações de um site", que é uma estrutura útil para
desenvolvedores de aplicativos da Web para obter a flexibilidade e reutilização sem redundância de código.

14) Quais são as diferenças entre Widgets e Helpers, adotados pelo framework Yii 2?
R: Widgets são blocos de códigos reusáveis que são usados nas
views para criar elementos de interface mais complexos
• Por exemplo, um widget DetailView serve para visualizar os
dados de uma instância de um modelo:
use yii\widgets\DetailView;
<?= DetailView::widget([
'model' => $model,
'attributes' => [
'id',
'nome',
'sigla',
'descricao:ntext',
],
]) ?>

Helpers, são classes
que ajudam a simplificar tarefas de programação comuns
– Algumas tarefas facilitadas por helpers: manipulação de strings e
arrays, geração de formulários, inserção de links e imagens, etc
• Os helpers estão organizados sob o namespace yii\helpers
• Todas as funções disponibilizadas por tais classes são estáticas
– Isto é, os helpers não precisam ser instanciados antes de
serem usados

15)ORM

R:RM é uma técnica de mapeamento objeto relacional que visa criar uma camada de mapeamento entre nosso
modelo de objetos (aplicação) e nosso modelo relacional (banco de dados) de forma a abstrair o acesso ao mesmo.
